{
  "stats": {
    "suites": 5,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2021-06-03T11:22:43.927Z",
    "end": "2021-06-03T11:22:44.975Z",
    "duration": 1048,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "49114c8c-1cf2-4ccf-bce0-7ef5ead3dba2",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "de684ea6-dd22-4ed9-99b3-7ad326f8dd95",
          "title": "QSEoW (Certificates)",
          "fullFile": "D:\\DEV\\Qlik\\qlik-rest-api\\tests\\QSEoW\\certificates.spec.ts",
          "file": "\\tests\\QSEoW\\certificates.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Repository (Certificates) - DELETE, GET, POST and PUT (Tag)",
              "fullTitle": "QSEoW (Certificates) Repository (Certificates) - DELETE, GET, POST and PUT (Tag)",
              "timedOut": false,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const repo = new index_1.QlikRepositoryClient(util.baseConfig);\n    const tagOperations = new util_1.TagOperations(repo);\n    const { newTagData, getTagData, deleteTagData, updateTagData, } = yield tagOperations.run();\n    expect(newTagData.status).to.be.eq(201) &&\n        expect(getTagData.status).to.be.eq(200) &&\n        expect(getTagData.data[0].id).to.be.eq(newTagData.data.id) &&\n        expect(updateTagData.status).to.be.eq(200) &&\n        expect(updateTagData.data.name).to.be.eq(tagOperations.tagNewName) &&\n        expect(deleteTagData.status).to.be.eq(204);\n});",
              "err": {},
              "uuid": "54583459-7a20-4461-85b3-06219f437de0",
              "parentUUID": "de684ea6-dd22-4ed9-99b3-7ad326f8dd95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Proxy (Certificates) - DELETE, GET, POST and PUT (Session)",
              "fullTitle": "QSEoW (Certificates) Proxy (Certificates) - DELETE, GET, POST and PUT (Session)",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    let localConfig = Object.assign({}, util.baseConfig);\n    localConfig.port = 4243;\n    const proxy = new index_1.QlikProxyClient(localConfig);\n    const proxyOperations = new util_1.ProxySessionOperation(proxy);\n    const { newSessionData, deleteSessionData, getSessionData, } = yield proxyOperations.run();\n    expect(newSessionData.status).to.be.eq(201) &&\n        expect(getSessionData.status).to.be.eq(200) &&\n        expect(getSessionData.data.id).to.be.undefined &&\n        expect(deleteSessionData.status).to.be.eq(200);\n});",
              "err": {},
              "uuid": "d55df490-6e9b-4e21-af72-40b46a6b4e50",
              "parentUUID": "de684ea6-dd22-4ed9-99b3-7ad326f8dd95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Engine (Certificates) - GET (Healthcheck)",
              "fullTitle": "QSEoW (Certificates) Engine (Certificates) - GET (Healthcheck)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    // TBA\n    expect(true).to.be.true;\n});",
              "err": {},
              "uuid": "c74fb1ca-c21d-44ea-bcf5-a1774da26de1",
              "parentUUID": "de684ea6-dd22-4ed9-99b3-7ad326f8dd95",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "54583459-7a20-4461-85b3-06219f437de0",
            "d55df490-6e9b-4e21-af72-40b46a6b4e50",
            "c74fb1ca-c21d-44ea-bcf5-a1774da26de1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 121,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0f8b30f9-0b27-437e-b98d-eeafed4d8b71",
          "title": "QSEoW (Header)",
          "fullFile": "D:\\DEV\\Qlik\\qlik-rest-api\\tests\\QSEoW\\header.spec.ts",
          "file": "\\tests\\QSEoW\\header.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Repository (Header) - DELETE, GET, POST and PUT (Tag)",
              "fullTitle": "QSEoW (Header) Repository (Header) - DELETE, GET, POST and PUT (Tag)",
              "timedOut": false,
              "duration": 238,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const repo = new index_1.QlikRepositoryClient(util.baseConfigHeader);\n    const tagOperations = new util_1.TagOperations(repo);\n    const { newTagData, getTagData, deleteTagData, updateTagData, } = yield tagOperations.run();\n    expect(newTagData.status).to.be.eq(201) &&\n        expect(getTagData.status).to.be.eq(200) &&\n        expect(getTagData.data[0].id).to.be.eq(newTagData.data.id) &&\n        expect(updateTagData.status).to.be.eq(200) &&\n        expect(updateTagData.data.name).to.be.eq(tagOperations.tagNewName) &&\n        expect(deleteTagData.status).to.be.eq(204);\n});",
              "err": {},
              "uuid": "ed8ea649-80d2-49c6-9e3f-0b26c6325d58",
              "parentUUID": "0f8b30f9-0b27-437e-b98d-eeafed4d8b71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Engine (Header) - GET (Healthcheck)",
              "fullTitle": "QSEoW (Header) Engine (Header) - GET (Healthcheck)",
              "timedOut": false,
              "duration": 37,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    let engine = new index_1.QlikEngineClient(util.baseConfigHeader);\n    let result = yield engine.Get(\"engine/healthcheck\");\n    expect(result.status).to.be.eq(200) &&\n        expect(result.data.version).to.not.be.empty;\n});",
              "err": {},
              "uuid": "eef1b76c-36f7-4a9b-8885-8fa64a626008",
              "parentUUID": "0f8b30f9-0b27-437e-b98d-eeafed4d8b71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Generic (Header) - GET (Healthcheck)",
              "fullTitle": "QSEoW (Header) Generic (Header) - GET (Healthcheck)",
              "timedOut": false,
              "duration": 34,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    let generic = new index_1.QlikGenericRestClient(util.baseConfigHeader);\n    let result = yield generic.Get(\"api/engine/healthcheck\");\n    expect(result.status).to.be.eq(200) &&\n        expect(result.data.version).to.not.be.empty;\n});",
              "err": {},
              "uuid": "b8bd70dd-d2d9-4a50-a003-1d4dd79ef17b",
              "parentUUID": "0f8b30f9-0b27-437e-b98d-eeafed4d8b71",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ed8ea649-80d2-49c6-9e3f-0b26c6325d58",
            "eef1b76c-36f7-4a9b-8885-8fa64a626008",
            "b8bd70dd-d2d9-4a50-a003-1d4dd79ef17b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 309,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "a92a04c0-1e1a-4d11-b3a2-ef4ba5e70478",
          "title": "QSEoW (JWT)",
          "fullFile": "D:\\DEV\\Qlik\\qlik-rest-api\\tests\\QSEoW\\jwt.spec.ts",
          "file": "\\tests\\QSEoW\\jwt.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Repository (JWT) - DELETE, GET, POST and PUT (Tag)",
              "fullTitle": "QSEoW (JWT) Repository (JWT) - DELETE, GET, POST and PUT (Tag)",
              "timedOut": false,
              "duration": 200,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const repo = new index_1.QlikRepositoryClient(util.baseConfigJWT);\n    const tagOperations = new util_1.TagOperations(repo);\n    const { newTagData, getTagData, deleteTagData, updateTagData, } = yield tagOperations.run();\n    expect(newTagData.status).to.be.eq(201) &&\n        expect(getTagData.status).to.be.eq(200) &&\n        expect(getTagData.data[0].id).to.be.eq(newTagData.data.id) &&\n        expect(updateTagData.status).to.be.eq(200) &&\n        expect(updateTagData.data.name).to.be.eq(tagOperations.tagNewName) &&\n        expect(deleteTagData.status).to.be.eq(204);\n});",
              "err": {},
              "uuid": "f2061107-541b-41c3-a54d-62c1aa52e055",
              "parentUUID": "a92a04c0-1e1a-4d11-b3a2-ef4ba5e70478",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2061107-541b-41c3-a54d-62c1aa52e055"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 200,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "ec76e413-db8f-4e0e-873c-b30260621511",
          "title": "QSEoW (Session)",
          "fullFile": "D:\\DEV\\Qlik\\qlik-rest-api\\tests\\QSEoW\\session.spec.ts",
          "file": "\\tests\\QSEoW\\session.spec.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"QSEoW (Session)\"",
              "fullTitle": "QSEoW (Session) \"before each\" hook in \"QSEoW (Session)\"",
              "timedOut": false,
              "duration": 3,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    let localProxyConfig = Object.assign({}, globalUtil.baseConfig);\n    localProxyConfig.port = 4243;\n    const proxyClient = new index_1.QlikProxyClient(localProxyConfig);\n    const proxyOperations = new util_1.ProxySessionOperation(proxyClient);\n    const sessionId = yield proxyOperations\n        .createSession()\n        .then((sessionDetails) => sessionDetails.data.SessionId);\n    const localUtil = new util_1.Util(false);\n    let localConfig = Object.assign({}, localUtil.baseConfigSession);\n    localConfig.authentication.sessionId = sessionId;\n    this.localConfig = localConfig;\n    this.proxyOperations = proxyOperations;\n    this.proxyClient = proxyClient;\n});",
              "err": {},
              "uuid": "627bb959-dde1-4749-a52e-0a4255552c2f",
              "parentUUID": "ec76e413-db8f-4e0e-873c-b30260621511",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"QSEoW (Session)\"",
              "fullTitle": "QSEoW (Session) \"after each\" hook in \"QSEoW (Session)\"",
              "timedOut": false,
              "duration": 3,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    yield this.proxyOperations.deleteSession(this.localConfig.authentication.sessionId);\n    this.proxyClient = undefined;\n    this.proxyOperations = undefined;\n    this.localConfig = undefined;\n});",
              "err": {},
              "uuid": "d23715c9-1e5f-4710-b721-1a51901eefd8",
              "parentUUID": "ec76e413-db8f-4e0e-873c-b30260621511",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Repository (Session) - DELETE, GET, POST and PUT (Tag)",
              "fullTitle": "QSEoW (Session) Repository (Session) - DELETE, GET, POST and PUT (Tag)",
              "timedOut": false,
              "duration": 324,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const repo = new index_1.QlikRepositoryClient(this.localConfig);\n    const tagOperations = new util_1.TagOperations(repo);\n    const { newTagData, getTagData, deleteTagData, updateTagData, } = yield tagOperations.run();\n    expect(newTagData.status).to.be.eq(201) &&\n        expect(getTagData.status).to.be.eq(200) &&\n        expect(getTagData.data[0].id).to.be.eq(newTagData.data.id) &&\n        expect(updateTagData.status).to.be.eq(200) &&\n        expect(updateTagData.data.name).to.be.eq(tagOperations.tagNewName) &&\n        expect(deleteTagData.status).to.be.eq(204);\n});",
              "err": {},
              "uuid": "87e0226c-e1b0-496a-b620-3470bf27cef1",
              "parentUUID": "ec76e413-db8f-4e0e-873c-b30260621511",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Proxy (Session)",
              "fullTitle": "QSEoW (Session) Proxy (Session)",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const util = new util_1.Util(false);\n    let sessionConfig = Object.assign({}, util.baseConfigSession);\n    sessionConfig.authentication.sessionId = this.localConfig.authentication.sessionId;\n    const proxyClient = new index_1.QlikProxyClient(sessionConfig);\n    const userInfo = yield proxyClient.Get(\"user\");\n    expect(userInfo.status).to.be.eq(200) &&\n        expect(userInfo.data.logoutUri).to.not.be.false;\n});",
              "err": {},
              "uuid": "70320746-0c8e-41d7-af3d-31aaa02f1f44",
              "parentUUID": "ec76e413-db8f-4e0e-873c-b30260621511",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "87e0226c-e1b0-496a-b620-3470bf27cef1",
            "70320746-0c8e-41d7-af3d-31aaa02f1f44"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 336,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "16e48c86-9faf-4fb0-b52b-113f1d4898a6",
          "title": "QSEoW (Ticket)",
          "fullFile": "D:\\DEV\\Qlik\\qlik-rest-api\\tests\\QSEoW\\ticket.spec.ts",
          "file": "\\tests\\QSEoW\\ticket.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Repository (Ticket) - DELETE, GET, POST and PUT (About)",
              "fullTitle": "QSEoW (Ticket) Repository (Ticket) - DELETE, GET, POST and PUT (About)",
              "timedOut": false,
              "duration": 49,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    let localBaseConfig = Object.assign({}, util.baseConfig);\n    localBaseConfig.port = 4243;\n    const proxy = new index_1.QlikProxyClient(localBaseConfig);\n    const ticket = yield proxy\n        .Post(\"ticket\", {\n        UserDirectory: `${process.env.SENSE_USER_DIRECTORY}`,\n        UserId: `${process.env.SENSE_USER_NAME}`,\n        Attributes: [],\n    })\n        .then((response) => response.data.Ticket);\n    let localConfig = Object.assign({}, util.baseConfigTicket);\n    localConfig.authentication.ticket = ticket;\n    const repo = new index_1.QlikRepositoryClient(localConfig);\n    const aboutData = yield repo.Get(\"about\");\n    expect(aboutData.data.buildVersion).to.be.not.be.empty;\n});",
              "err": {},
              "uuid": "e99826a8-30ca-45e2-9c6a-f9e2050cadef",
              "parentUUID": "16e48c86-9faf-4fb0-b52b-113f1d4898a6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e99826a8-30ca-45e2-9c6a-f9e2050cadef"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 49,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}